Grammar:

prog -> program id opt_stmts

stmt -> set id expr
        | if (expresion) opt_stmts
        | ifelse (expresion) opt_stmts opt_stmts
        | while (expresion) opt_stmts

opt_stmts -> {stmt_lst} | instr

stmt_lst -> instr stmt_lst | epsilon

instr -> ; | stmt;

expr -> term expr_
expr_ -> + term expr_ | - term expr_ | epsilon

term -> factor term_
term_ -> * factor term_ | / factor term_ | epsilon

factor -> (expr)
        | id
        | num

expression -> expr auxExpression
auxExpression -> < expr | > expr | = expr